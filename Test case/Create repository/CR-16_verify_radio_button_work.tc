import static com.kms.katalon.core.checkpoint.CheckpointFactory.findCheckpoint
import static com.kms.katalon.core.testcase.TestCaseFactory.findTestCase
import static com.kms.katalon.core.testdata.TestDataFactory.findTestData
import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject
import static com.kms.katalon.core.testobject.ObjectRepository.findWindowsObject
import com.kms.katalon.core.checkpoint.Checkpoint as Checkpoint
import com.kms.katalon.core.cucumber.keyword.CucumberBuiltinKeywords as CucumberKW
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as Mobile
import com.kms.katalon.core.model.FailureHandling as FailureHandling
import com.kms.katalon.core.testcase.TestCase as TestCase
import com.kms.katalon.core.testdata.TestData as TestData
import com.kms.katalon.core.testng.keyword.TestNGBuiltinKeywords as TestNGKW
import com.kms.katalon.core.testobject.TestObject as TestObject
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI
import com.kms.katalon.core.windows.keyword.WindowsBuiltinKeywords as Windows
import internal.GlobalVariable as GlobalVariable
import org.openqa.selenium.Keys as Keys

'CR-16: Verify that the "Public" and "Private" radio buttons work correctly'

//'Step 1: call test case SI-02 to SignIn'
//WebUI.callTestCase(findTestCase('Calltest_SI-02-Signin success'), [:], FailureHandling.STOP_ON_FAILURE)
//
//'Step 2: Click the new btn'
//String str_value_btn = 'New'
//
//WebUI.click(findTestObject('null', [('name_btn') : str_value_btn]))
//
//'Step 3: Verify that the system navigates to the "Create a new repository" page'
//WebUI.verifyElementPresent(findTestObject('null'), 
//    0)
'Step 1: rollback to create repository page'
WebUI.navigateToUrl('https://github.com/new')

'Step 2: Click the Owner list'
String value1_containstext_span = 'Choose an owner'

WebUI.click(findTestObject('dynamic_by_contains-text_in_span', [('containstext_value_in_span') : value1_containstext_span]))

'Step 3: Select one option'
String value2_containstext_span = 'chillcunglang2'

WebUI.click(findTestObject('dynamic_by_contains-text_in_span', [('containstext_value_in_span') : value2_containstext_span]))

'Step 4: Verify that default option was ticked is Public and the message: "You are creating a private repository in your personal account." is display'
String str1_value_value_inp = 'public'

WebUI.verifyElementChecked(findTestObject('dynamic_by_value_in_inp', [('value_value_in_inp') : str1_value_value_inp]), 0)

String str1_value_containstext_span = 'You are creating a public repository in your personal account.'

WebUI.verifyElementPresent(findTestObject('dynamic_by_contains-text_in_span', [('containstext_value_in_span') : str1_value_containstext_span]), 
    0)
'Step 5: take the screenshot'
WebUI.takeScreenshot()
'Step 6: Tick the "Private" option'
String str2_value_value_inp = 'private'

WebUI.check(findTestObject('dynamic_by_value_in_inp', [('value_value_in_inp') : str2_value_value_inp]))

'Step 7: Verify that the message: "You are creating a private repository in your personal account." is display'
String str2_value_containstext_span = 'You are creating a private repository in your personal account.'

WebUI.verifyElementPresent(findTestObject('dynamic_by_contains-text_in_span', [('containstext_value_in_span') : str2_value_containstext_span]), 
    0)

'Step 8: take the screenshot'
WebUI.takeScreenshot()
