import static com.kms.katalon.core.checkpoint.CheckpointFactory.findCheckpoint
import static com.kms.katalon.core.testcase.TestCaseFactory.findTestCase
import static com.kms.katalon.core.testdata.TestDataFactory.findTestData
import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject
import static com.kms.katalon.core.testobject.ObjectRepository.findWindowsObject
import com.kms.katalon.core.checkpoint.Checkpoint as Checkpoint
import com.kms.katalon.core.cucumber.keyword.CucumberBuiltinKeywords as CucumberKW
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as Mobile
import com.kms.katalon.core.model.FailureHandling as FailureHandling
import com.kms.katalon.core.testcase.TestCase as TestCase
import com.kms.katalon.core.testdata.TestData as TestData
import com.kms.katalon.core.testng.keyword.TestNGBuiltinKeywords as TestNGKW
import com.kms.katalon.core.testobject.TestObject as TestObject
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI
import com.kms.katalon.core.windows.keyword.WindowsBuiltinKeywords as Windows
import internal.GlobalVariable as GlobalVariable
import org.openqa.selenium.Keys as Keys

//WebUI.openBrowser('')
//
//WebUI.navigateToUrl('https://github.com/signup')
//
//WebUI.maximizeWindow()
'SU-09: Verify that the user can not sign up successfully with an invalid password'
'Step 1: Enter a valid email in the Enter your email textbox'
String str1_value_id_inp = 'email'

WebUI.setText(findTestObject('dynamic_by_id_in_inp', [('id_value_in_input') : str1_value_id_inp]), email)

'Step 2: Verify that the Create a password label is displayed'
String str1_value_id_div_div_label = 'password-container'

WebUI.verifyElementPresent(findTestObject('dynamic_by_id_in_div-div-label', [('id_value_in_div-div-label') : str1_value_id_div_div_label]), 
    0)

'Step 3: Click the Continue btn to move to the Create a password textbox'
String str1_value_datacontinueto_btn = 'password-container'

WebUI.click(findTestObject('dynamic_by_data-continue-to_in_btn', [('data-continue-to_value_in_btn') : str1_value_datacontinueto_btn]))

'Step 4: Enter an invalid password in the Create a password textbox'
String str2_value_id_inp = 'password'

WebUI.setText(findTestObject('dynamic_by_id_in_inp', [('id_value_in_input') : str2_value_id_inp]), '          ')

'Step 5: delay for 2 seconds to see the error message '
WebUI.delay(2)

//Using decision-making statements
'Step 6: if error msg was not displayed then print msg '
String str_value_id_p_p = 'password-err'
boolean msg_not_exists = WebUI.verifyElementNotPresent(findTestObject('dynamic_by_id_in_p-p',[('id_value_in_p-p'):str_value_id_p_p]), 0, FailureHandling.STOP_ON_FAILURE)

if (msg_not_exists) {
    'Step 7: print the msg to verify that this case is passed'
    println('msg_error not display, so case: space password was passed')
} else {
    'Step 8: else: when error msg was displayed then gettext in the msg_error was displayed and verify that actual_msg = msg_expected'
    String str_id_msg_pass_error = 'password-err'

    actual_msg = WebUI.getText(findTestObject('null', [('msg_error') : str_id_msg_pass_error]))

    actual_msg = actual_msg.trim()

    WebUI.verifyEqual(actual_msg, msg_expected)
	
	'Step 9: take the screenshot'
	WebUI.takeScreenshot()
}

